[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "paleomix"
dynamic = ["version"]

authors = [{ name = "Mikkel Schubert", email = "MikkelSch@gmail.com" }]
license = { file = "LICENSE" }
description = "Bioinformatics pipelines for HTS data"
readme = { file = "README.rst", content-type = "text/x-rst" }

requires-python = ">=3.8"
dependencies = [
    "coloredlogs>=10.0",
    "configargparse>=0.13.0",
    "humanfriendly>=4.7",
    "packaging>=19.0",
    "pysam>=0.10.0",
    "ruamel.yaml>=0.16.0",
    "setproctitle>=1.1.0",
    "typing_extensions>=4.0",
]

keywords = ["pipeline", "bioinformatics", "hts", "bam"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]


[project.urls]
Homepage = "https://github.com/MikkelSchubert/paleomix"
Documentation = "https://paleomix.readthedocs.io"
Repository = "https://github.com/MikkelSchubert/paleomix.git"
Issues = "https://github.com/MikkelSchubert/paleomix/issues"

[project.optional-dependencies]
dev = ["nox", "pytest-cov", "pytest"]

[project.scripts]
paleomix = "paleomix.__main__:main"

[tool.hatch.version]
path = "src/paleomix/__init__.py"

[tool.coverage.run]
branch = true

[tool.coverage.report]
skip_covered = true
show_missing = true
precision = 1

exclude_also = [
    # Exclude code-blocks that are only used during (pyright) type-checking
    "^if TYPE_CHECKING:",
]

[tool.coverage.xml]
output = "cov.xml"

[tool.isort]
profile = "black"

[tool.pyright]
# Used since `strict = [...]` prevents individual `reportX` settings:
include = ["src", "tests", "typings", "noxfile.py"]
# typeCheckingMode = "strict"

# Location of custom stub files
stubPath = "typings"

# FIXME: Disabled until project is fully typed
reportUnnecessaryIsInstance = "none"

[tool.pytest.ini_options]
markers = ["slow"]

[tool.ruff]
target-version = "py37"
output-format = "concise"

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    # Rules either deemed too burdonsome to implement or not useful
    "ANN", # flake8-annotations
    "B",   # flake8-bugbear
    "C90", # mccabe -- Complexity measures not deemed useful
    "COM", # flake8-commas -- Formatting handled by ruff/black
    "D",   # pydocstyle
    "ERA", # eradicate
    "EM",  # flake8-errmsg
    "T20", # flake8-print
    "FBT", # flake8-boolean-trap
    "TD",  # flake8-todos
    "FIX", # flake8-fixme
    "PTH", # flake8-use-pathlib
    "S",   # flake8-bandit
    "TRY", # tryceratops
    # Individual rules deemed too burdonsome or not useful
    "A001",    # builtin-variable-shadowing -- id/help/etc. are often useful variables
    "A002",    # builtin-argument-shadowing -- id/help/etc. are often useful arguments
    "ANN101",  # missing-type-self -- Missing type annotation for `self` in method
    "ANN102",  # missing-type-cls -- Missing type annotation for `cls` in classmethod
    "ISC001",  # single-line-implicit-string-concatenation -- conflict with `ruff format`
    "PERF401", # manual-list-comprehension -- a manual loop is clearer in many cases
    "PLR09",   # too-many-* -- complexity warnings disabled for now
    "PLR2004", # magic-value-comparison -- Produces too many false positives
    "PLW2901", # redefined-loop-name -- commonly used to prevent using the old variable
    "RET505",  # superfluous-else-return -- stylistic preference
    "RET506",  # superfluous-else-raise -- stylistic preference
    "RET507",  # superfluous-else-continue --stylistic preference
    "RET508",  # superfluous-else-break -- stylistic preference
    "S603",    # subprocess-without-shell-equals-true -- `shell=True` is never used
    # TCH001-TCH003 are disabled to minimize runtime/type-checking discrepancies
    "TCH001", # typing-only-first-party-import
    "TCH002", # typing-only-third-party-import
    "TCH003", # typing-only-standard-library-import
    "TRY003", # raise-vanilla-args
    "UP032",  # f-string -- replacing `format` may decrease readability in some cases
]

[tool.ruff.lint.per-file-ignores]

"tests/**.py" = [
    "S101", # assert -- Use of assert detected
    "S108", # hardcoded-temp-file -- Probable insecure usage of temporary file or dir
    "S311", # suspicious-non-cryptographic-random-usage
]

[tool.uv]
reinstall-package = ["paleomix"]
